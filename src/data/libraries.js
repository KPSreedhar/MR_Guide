export const libraries = [
  {
    id: 1,
    name: "Redux Toolkit",
    category: "state-management",
    icon: "üîÑ",
    description: "The official, opinionated Redux setup with reduced boilerplate.",
    problem: "Simplifies complex state management with minimal configuration.",
    install: "npm install @reduxjs/toolkit",
    codeExample: `import { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});`,
    useCases: ["Large-scale applications", "Complex state logic", "DevTools integration"],
    pros: ["Immer built-in", "RTK Query included", "Redux best practices"],
    docsLink: "https://redux-toolkit.js.org/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "35K+",
    weeklyDownloads: "2M+",
    tags: ["redux", "state", "middleware"],
    lastUpdated: "2023-11-15",
    bundleSize: "12.7kB"
  },
  {
    id: 2,
    name: "Zustand",
    category: "state-management",
    icon: "üêª",
    description: "Minimalist state management with a simple API and no boilerplate.",
    problem: "Lightweight alternative to Redux for small to medium apps.",
    install: "npm install zustand",
    codeExample: `import create from 'zustand';\n\nconst useStore = create(set => ({\n  count: 0,\n  increment: () => set(state => ({ count: state.count + 1 })),\n}));`,
    useCases: ["Small applications", "Global state", "Persisted state"],
    pros: ["No providers needed", "Tiny bundle size", "Devtools support"],
    docsLink: "https://zustand-demo.pmnd.rs/",
    difficulty: "beginner",
    popularity: 4,
    githubStars: "33K+",
    weeklyDownloads: "1.5M+",
    tags: ["lightweight", "hooks", "simple"],
    lastUpdated: "2023-11-12",
    bundleSize: "1.2kB"
  },
  {
    id: 3,
    name: "TanStack Query",
    category: "data-fetching",
    icon: "üì°",
    description: "Hooks for fetching, caching, and updating asynchronous data.",
    problem: "Simplifies server state management without Redux.",
    install: "npm install @tanstack/react-query",
    codeExample: `const { data, isLoading } = useQuery({ queryKey: ['todos'], queryFn: fetchTodos });`,
    useCases: ["Data-driven apps", "Real-time updates", "Optimistic UI"],
    pros: ["Auto-caching", "Background refetching", "Deduping requests"],
    docsLink: "https://tanstack.com/query/latest",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "36K+",
    weeklyDownloads: "2.2M+",
    tags: ["async", "caching", "hooks"],
    lastUpdated: "2023-11-20",
    bundleSize: "13.5kB"
  },
  {
    id: 4,
    name: "Framer Motion",
    category: "animation",
    icon: "‚ú®",
    description: "Production-ready animations for React with declarative syntax.",
    problem: "Simplifies complex animations and gestures.",
    install: "npm install framer-motion",
    codeExample: `import { motion } from 'framer-motion';\n\n<motion.div \n  animate={{ scale: 1.2 }}\n  transition={{ duration: 0.5 }}\n>\n  Hello\n</motion.div>`,
    useCases: ["Page transitions", "Micro-interactions", "Drag gestures"],
    pros: ["Spring animations", "Gesture support", "SSR compatible"],
    docsLink: "https://www.framer.com/motion/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "19K+",
    weeklyDownloads: "1.2M+",
    tags: ["animations", "gestures", "ui"],
    lastUpdated: "2023-11-10",
    bundleSize: "18.4kB"
  },
  {
    id: 5,
    name: "React Hook Form",
    category: "forms",
    icon: "üìù",
    description: "Performant, flexible forms with easy-to-use validation.",
    problem: "Simplifies form handling without unnecessary re-renders.",
    install: "npm install react-hook-form",
    codeExample: `const { register, handleSubmit } = useForm();\nconst onSubmit = data => console.log(data);\n\n<form onSubmit={handleSubmit(onSubmit)}>\n  <input {...register('name')} />\n</form>`,
    useCases: ["Complex forms", "Form validation", "Wizard forms"],
    pros: ["No re-renders", "Tiny size", "Easy validation"],
    docsLink: "https://react-hook-form.com/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "36K+",
    weeklyDownloads: "2.5M+",
    tags: ["forms", "validation", "performance"],
    lastUpdated: "2023-11-13",
    bundleSize: "9.1kB"
  },
  {
    id: 6,
    name: "Styled Components",
    category: "styling",
    icon: "üé®",
    description: "CSS-in-JS with component-level styling and theming.",
    problem: "Scopes styles to components without CSS conflicts.",
    install: "npm install styled-components",
    codeExample: `import styled from 'styled-components';\n\nconst Button = styled.button\`\n  background: palevioletred;\n  border-radius: 3px;\n\`;`,
    useCases: ["Component libraries", "Themed applications", "Dynamic styling"],
    pros: ["Theming support", "SSR compatible", "No class names"],
    docsLink: "https://styled-components.com/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "39K+",
    weeklyDownloads: "3M+",
    tags: ["css-in-js", "theming", "components"],
    lastUpdated: "2023-11-11",
    bundleSize: "16.8kB"
  },
  {
    id: 7,
    name: "React Router",
    category: "routing",
    icon: "üõ£Ô∏è",
    description: "Declarative routing for React applications.",
    problem: "Manages navigation and URL state seamlessly.",
    install: "npm install react-router-dom",
    codeExample: `import { Routes, Route } from 'react-router-dom';\n\n<Routes>\n  <Route path="/" element={<Home />} />\n  <Route path="/about" element={<About />} />\n</Routes>`,
    useCases: ["Single-page apps", "Nested routes", "Protected routes"],
    pros: ["Declarative API", "Nested routing", "History management"],
    docsLink: "https://reactrouter.com/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "50K+",
    weeklyDownloads: "8M+",
    tags: ["routing", "navigation", "spa"],
    lastUpdated: "2023-11-09",
    bundleSize: "7.5kB"
  },
  {
    id: 8,
    name: "React Testing Library",
    category: "testing",
    icon: "üß™",
    description: "Simple and complete testing utilities for React.",
    problem: "Tests components from a user's perspective.",
    install: "npm install @testing-library/react",
    codeExample: `import { render, screen } from '@testing-library/react';\n\nrender(<Component />);\nexpect(screen.getByText('Hello')).toBeInTheDocument();`,
    useCases: ["Unit testing", "Integration testing", "Accessibility testing"],
    pros: ["User-centric tests", "Accessibility focused", "Framework agnostic"],
    docsLink: "https://testing-library.com/docs/react-testing-library/intro/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "18K+",
    weeklyDownloads: "5M+",
    tags: ["testing", "accessibility", "jest"],
    lastUpdated: "2023-11-07",
    bundleSize: "6.3kB"
  },
  {
    id: 9,
    name: "React Icons",
    category: "ui",
    icon: "üéØ",
    description: "Popular icon packs as React components.",
    problem: "Easy icon integration with tree-shaking support.",
    install: "npm install react-icons",
    codeExample: `import { FaReact } from 'react-icons/fa';\n\n<FaReact className="icon" />`,
    useCases: ["UI consistency", "Icon systems", "Design systems"],
    pros: ["Multiple icon packs", "Tree-shakable", "Easy to use"],
    docsLink: "https://react-icons.github.io/react-icons/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "9K+",
    weeklyDownloads: "4M+",
    tags: ["icons", "ui", "design"],
    lastUpdated: "2023-11-06",
    bundleSize: "2.1kB"
  },
  {
    id: 10,
    name: "React DnD",
    category: "drag-drop",
    icon: "‚ÜîÔ∏è",
    description: "Drag and Drop for React with flexible backend system.",
    problem: "Adds complex drag and drop functionality to React apps.",
    install: "npm install react-dnd react-dnd-html5-backend",
    codeExample: `const [{ isDragging }, drag] = useDrag(() => ({\n  type: 'box',\n  collect: (monitor) => ({\n    isDragging: monitor.isDragging(),\n  }),\n}));`,
    useCases: ["Kanban boards", "File uploaders", "UI builders"],
    pros: ["Flexible backends", "Touch support", "Custom drag previews"],
    docsLink: "https://react-dnd.github.io/react-dnd/",
    difficulty: "advanced",
    popularity: 4,
    githubStars: "19K+",
    weeklyDownloads: "800K+",
    tags: ["drag-drop", "ui", "interaction"],
    lastUpdated: "2023-11-18",
    bundleSize: "18.2kB"
  },
  {
    id: 11,
    name: "React Select",
    category: "forms",
    icon: "üîΩ",
    description: "A flexible and beautiful Select Input control for ReactJS.",
    problem: "Replaces native select inputs with feature-rich custom dropdowns.",
    install: "npm install react-select",
    codeExample: `import Select from 'react-select';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' }\n];\n\n<Select options={options} />`,
    useCases: ["Form dropdowns", "Multi-select inputs", "Searchable selects"],
    pros: ["Accessibility", "Custom styling", "Async loading"],
    docsLink: "https://react-select.com/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "26K+",
    weeklyDownloads: "1.8M+",
    tags: ["dropdown", "forms", "accessible"],
    lastUpdated: "2023-11-15",
    bundleSize: "22.7kB"
  },
  {
    id: 12,
    name: "React Table",
    category: "tables",
    icon: "üìã",
    description: "Headless UI for building powerful tables and datagrids in React.",
    problem: "Creates complex, feature-rich tables without styling constraints.",
    install: "npm install @tanstack/react-table",
    codeExample: `const table = useReactTable({\n  data,\n  columns,\n  getCoreRowModel: getCoreRowModel(),\n});`,
    useCases: ["Data grids", "Admin panels", "Financial reports"],
    pros: ["Headless UI", "Sorting/filtering", "Pagination"],
    docsLink: "https://tanstack.com/table/latest",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "22K+",
    weeklyDownloads: "900K+",
    tags: ["tables", "data", "headless"],
    lastUpdated: "2023-11-19",
    bundleSize: "15.8kB"
  },
  {
    id: 13,
    name: "React Virtualized",
    category: "performance",
    icon: "‚ö°",
    description: "React components for efficiently rendering large lists and tabular data.",
    problem: "Renders large datasets efficiently by only showing visible items.",
    install: "npm install react-virtualized",
    codeExample: `import { List } from 'react-virtualized';\n\n<List\n  width={300}\n  height={300}\n  rowCount={1000}\n  rowHeight={20}\n  rowRenderer={rowRenderer}\n/>`,
    useCases: ["Large lists", "Data tables", "Infinite scrolling"],
    pros: ["Performance optimized", "Window scrolling", "Dynamic heights"],
    docsLink: "https://github.com/bvaughn/react-virtualized",
    difficulty: "intermediate",
    popularity: 4,
    githubStars: "25K+",
    weeklyDownloads: "600K+",
    tags: ["performance", "lists", "virtualization"],
    lastUpdated: "2023-11-17",
    bundleSize: "28.3kB"
  },
  {
    id: 14,
    name: "React Helmet",
    category: "seo",
    icon: "üìÑ",
    description: "A document head manager for React applications with SSR support.",
    problem: "Manages changes to the document head in a declarative way.",
    install: "npm install react-helmet",
    codeExample: `import { Helmet } from 'react-helmet';\n\n<Helmet>\n  <title>My Page Title</title>\n  <meta name="description" content="Page description" />\n</Helmet>`,
    useCases: ["SEO optimization", "Social media tags", "Dynamic titles"],
    pros: ["SSR support", "Nested components", "Document title management"],
    docsLink: "https://github.com/nfl/react-helmet",
    difficulty: "beginner",
    popularity: 4,
    githubStars: "17K+",
    weeklyDownloads: "1.1M+",
    tags: ["seo", "meta-tags", "ssr"],
    lastUpdated: "2023-11-14",
    bundleSize: "5.7kB"
  },
  {
    id: 15,
    name: "Recharts",
    category: "charts",
    icon: "üìä",
    description: "A composable charting library built on React components.",
    problem: "Easily build charts with a declarative React syntax.",
    install: "npm install recharts",
    codeExample: `import { LineChart, Line } from 'recharts';\n\n<LineChart data={data}>\n  <Line type="monotone" dataKey="uv" stroke="#8884d8" />\n</LineChart>`,
    useCases: ["Dashboards", "Data visualization", "Analytics"],
    pros: ["Declarative API", "Responsive charts", "Customizable"],
    docsLink: "https://recharts.org/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "21K+",
    weeklyDownloads: "1.4M+",
    tags: ["charts", "visualization", "dashboard"],
    lastUpdated: "2023-11-21",
    bundleSize: "26.2kB"
  },
  {
    id: 16,
    name: "Jotai",
    category: "state-management",
    icon: "üß©",
    description: "Primitive and flexible state management for React.",
    problem: "Atom-based state system with minimal boilerplate.",
    install: "npm install jotai",
    codeExample: `const countAtom = atom(0);\nconst [count, setCount] = useAtom(countAtom);`,
    useCases: ["Lightweight global state", "Composable states", "Performance apps"],
    pros: ["Tiny API", "Async atoms", "Concurrent mode ready"],
    docsLink: "https://jotai.org/",
    difficulty: "beginner",
    popularity: 4,
    githubStars: "16K+",
    weeklyDownloads: "800K+",
    tags: ["state", "atoms", "lightweight"],
    lastUpdated: "2023-11-16",
    bundleSize: "1.6kB"
  },
  {
    id: 17,
    name: "Recoil",
    category: "state-management",
    icon: "üßÆ",
    description: "Experimental state management for React from Facebook.",
    problem: "Manages complex state with derived values and atoms.",
    install: "npm install recoil",
    codeExample: `const countAtom = atom({ key: 'count', default: 0 });\nconst count = useRecoilValue(countAtom);`,
    useCases: ["Complex state", "Derived data", "Concurrent rendering"],
    pros: ["Selectors", "Concurrent mode support", "Easy adoption"],
    docsLink: "https://recoiljs.org/",
    difficulty: "intermediate",
    popularity: 4,
    githubStars: "19K+",
    weeklyDownloads: "700K+",
    tags: ["state", "atoms", "selectors"],
    lastUpdated: "2023-11-15",
    bundleSize: "14.2kB"
  },
  {
    id: 18,
    name: "Apollo Client",
    category: "data-fetching",
    icon: "üöÄ",
    description: "Comprehensive GraphQL client for React.",
    problem: "Simplifies GraphQL queries, caching, and mutations.",
    install: "npm install @apollo/client graphql",
    codeExample: `const { data } = useQuery(gql\`{ books { title } }\`);`,
    useCases: ["GraphQL apps", "Data-heavy dashboards", "Caching"],
    pros: ["GraphQL caching", "TypeScript support", "Devtools"],
    docsLink: "https://www.apollographql.com/docs/react/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "19K+",
    weeklyDownloads: "2M+",
    tags: ["graphql", "data", "caching"],
    lastUpdated: "2023-11-21",
    bundleSize: "30.5kB"
  },
  {
    id: 19,
    name: "SWR",
    category: "data-fetching",
    icon: "üîÑ",
    description: "React Hooks library for data fetching from Vercel.",
    problem: "Stale-while-revalidate caching strategy for remote data.",
    install: "npm install swr",
    codeExample: `const { data, error } = useSWR('/api/data', fetcher);`,
    useCases: ["Client-side data fetching", "Caching", "Realtime updates"],
    pros: ["Auto revalidation", "Focus recovery", "SSR support"],
    docsLink: "https://swr.vercel.app/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "28K+",
    weeklyDownloads: "1.9M+",
    tags: ["fetching", "caching", "hooks"],
    lastUpdated: "2023-11-20",
    bundleSize: "4.8kB"
  },
  {
    id: 20,
    name: "Formik",
    category: "forms",
    icon: "üìë",
    description: "Form library for React with validation and state management.",
    problem: "Manages form state and validation easily.",
    install: "npm install formik",
    codeExample: `<Formik initialValues={{ email: '' }} onSubmit={...} />`,
    useCases: ["Form validation", "Complex forms", "Controlled inputs"],
    pros: ["Yup integration", "Form context", "Field-level validation"],
    docsLink: "https://formik.org/",
    difficulty: "intermediate",
    popularity: 4,
    githubStars: "33K+",
    weeklyDownloads: "1.5M+",
    tags: ["forms", "validation", "yup"],
    lastUpdated: "2023-11-17",
    bundleSize: "12.2kB"
  },
  {
    id: 21,
    name: "Radix UI",
    category: "ui",
    icon: "üéõÔ∏è",
    description: "Accessible unstyled UI components for React.",
    problem: "Build custom-styled accessible components easily.",
    install: "npm install @radix-ui/react-*",
    codeExample: `<Dialog.Root><Dialog.Trigger>Open</Dialog.Trigger></Dialog.Root>`,
    useCases: ["Design systems", "Accessible apps", "Custom UI"],
    pros: ["Accessibility first", "Composable", "Unstyled primitives"],
    docsLink: "https://www.radix-ui.com/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "15K+",
    weeklyDownloads: "700K+",
    tags: ["ui", "accessibility", "unstyled"],
    lastUpdated: "2023-11-22",
    bundleSize: "varies per component"
  },
  {
    id: 22,
    name: "Chakra UI",
    category: "ui",
    icon: "üåà",
    description: "Accessible, modular, and themeable component library.",
    problem: "Speeds up UI building with prebuilt accessible components.",
    install: "npm install @chakra-ui/react @emotion/react @emotion/styled framer-motion",
    codeExample: `<Button colorScheme="teal">Click me</Button>`,
    useCases: ["Dashboards", "UI prototypes", "Accessible apps"],
    pros: ["Theme system", "Accessibility", "Composable"],
    docsLink: "https://chakra-ui.com/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "35K+",
    weeklyDownloads: "1.2M+",
    tags: ["ui", "design", "accessible"],
    lastUpdated: "2023-11-19",
    bundleSize: "30.1kB"
  },
  {
    id: 23,
    name: "Mantine",
    category: "ui",
    icon: "üíé",
    description: "Modern React component library with hooks.",
    problem: "Provides 100+ components with accessibility and theming.",
    install: "npm install @mantine/core @mantine/hooks",
    codeExample: `<Button variant="outline">Click me</Button>`,
    useCases: ["Design systems", "Dashboards", "UI kits"],
    pros: ["Huge set of components", "Dark mode", "TypeScript"],
    docsLink: "https://mantine.dev/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "22K+",
    weeklyDownloads: "700K+",
    tags: ["ui", "components", "hooks"],
    lastUpdated: "2023-11-20",
    bundleSize: "varies"
  },
  {
    id: 24,
    name: "Headless UI",
    category: "ui",
    icon: "üîó",
    description: "Unstyled accessible UI components by Tailwind Labs.",
    problem: "Provides fully accessible primitives without styling.",
    install: "npm install @headlessui/react",
    codeExample: `<Menu><Menu.Button>Options</Menu.Button><Menu.Items>...</Menu.Items></Menu>`,
    useCases: ["Custom UI", "Accessible apps", "Tailwind projects"],
    pros: ["Accessibility", "Composable", "Unstyled"],
    docsLink: "https://headlessui.dev/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "23K+",
    weeklyDownloads: "1.1M+",
    tags: ["ui", "accessibility", "unstyled"],
    lastUpdated: "2023-11-21",
    bundleSize: "small per component"
  },
  {
    id: 25,
    name: "Victory",
    category: "charts",
    icon: "üìà",
    description: "Modular charting components for React and React Native.",
    problem: "Create beautiful charts with high customization.",
    install: "npm install victory",
    codeExample: `<VictoryPie data={[{ x: "Cats", y: 35 }, { x: "Dogs", y: 40 }]} />`,
    useCases: ["Data visualization", "Dashboards", "Reports"],
    pros: ["React Native support", "Accessible", "Customizable"],
    docsLink: "https://formidable.com/open-source/victory/",
    difficulty: "intermediate",
    popularity: 4,
    githubStars: "10K+",
    weeklyDownloads: "400K+",
    tags: ["charts", "visualization", "react-native"],
    lastUpdated: "2023-11-18",
    bundleSize: "45.2kB"
  },
  {
    id: 26,
    name: "VisX",
    category: "charts",
    icon: "üìâ",
    description: "Low-level visualization library for React from Airbnb.",
    problem: "Composable charting primitives for custom visualizations.",
    install: "npm install @visx/visx",
    codeExample: `<BarGraph data={data} />`,
    useCases: ["Custom charts", "Dashboards", "Data-heavy apps"],
    pros: ["Composable", "D3-powered", "Flexible"],
    docsLink: "https://airbnb.io/visx/",
    difficulty: "advanced",
    popularity: 4,
    githubStars: "17K+",
    weeklyDownloads: "300K+",
    tags: ["charts", "visualization", "d3"],
    lastUpdated: "2023-11-19",
    bundleSize: "varies"
  },
  {
    id: 27,
    name: "React Spring",
    category: "animation",
    icon: "üåø",
    description: "Spring-physics-based animation library for React.",
    problem: "Smooth and natural animations using spring physics.",
    install: "npm install @react-spring/web",
    codeExample: `const styles = useSpring({ opacity: 1, from: { opacity: 0 } });\n<animated.div style={styles}>Hello</animated.div>`,
    useCases: ["Animations", "Gestures", "Transitions"],
    pros: ["Physics-based", "Declarative", "React Native support"],
    docsLink: "https://react-spring.dev/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "26K+",
    weeklyDownloads: "1M+",
    tags: ["animations", "transitions", "physics"],
    lastUpdated: "2023-11-18",
    bundleSize: "22.4kB"
  },
  {
    id: 28,
    name: "GSAP",
    category: "animation",
    icon: "üé¨",
    description: "Industry-standard animation library with React support.",
    problem: "Powerful timeline-based animations and transitions.",
    install: "npm install gsap",
    codeExample: `import { gsap } from 'gsap';\ngsap.to('.box', { x: 100, duration: 2 });`,
    useCases: ["Complex animations", "Timelines", "Interactive UI"],
    pros: ["Timeline control", "Cross-browser", "Plugin ecosystem"],
    docsLink: "https://greensock.com/gsap/",
    difficulty: "advanced",
    popularity: 5,
    githubStars: "17K+",
    weeklyDownloads: "1.3M+",
    tags: ["animations", "timelines", "ui"],
    lastUpdated: "2023-11-20",
    bundleSize: "62.7kB"
  },
  {
    id: 29,
    name: "Tailwind CSS",
    category: "styling",
    icon: "üé®",
    description: "A utility-first CSS framework for rapid UI development with pre-defined classes.",
    problem: "Reduces the need to write custom CSS, speeds up styling, and ensures consistent design.",
    install: "npm install -D tailwindcss\nnpx tailwindcss init",
    codeExample: `<div class="bg-white p-8 rounded-lg shadow text-center">
  <h1 class="text-2xl font-bold text-blue-600">Hello, Tailwind!</h1>
  <p class="text-gray-700 mt-2">This is a simple example using Tailwind CSS.</p>
  <button class="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Click Me</button>
</div>`,
    useCases: ["Rapid prototyping", "Responsive design", "Consistent UI styling", "Custom component design"],
    pros: ["Utility-first approach", "Highly customizable", "Responsive out-of-the-box", "Small final CSS size with purge"],
    docsLink: "https://tailwindcss.com/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "76K+",
    weeklyDownloads: "6M+",
    tags: ["css", "framework", "utility-first", "responsive"],
    lastUpdated: "2025-08-01",
    bundleSize: "27kB"
  },
  {
    id: 30,
    name: "Chakra UI",
    category: "styling",
    icon: "üåà",
    description: "Accessible, modular, and themeable component library for React.",
    problem: "Speeds up UI building with prebuilt accessible components.",
    install: "npm install @chakra-ui/react @emotion/react @emotion/styled framer-motion",
    codeExample: `<Button colorScheme="teal">Click me</Button>`,
    useCases: ["Dashboards", "UI prototypes", "Accessible apps"],
    pros: ["Theme system", "Accessibility", "Composable"],
    docsLink: "https://chakra-ui.com/",
    difficulty: "beginner",
    popularity: 5,
    githubStars: "35K+",
    weeklyDownloads: "1.2M+",
    tags: ["ui", "design", "accessible", "components"],
    lastUpdated: "2023-11-19",
    bundleSize: "30.1kB"
  },
  {
    id: 31,
    name: "Ant Design",
    category: "styling",
    icon: "üñåÔ∏è",
    description: "Enterprise-class UI design language and React components library.",
    problem: "Provides a large set of polished components for building professional applications quickly.",
    install: "npm install antd",
    codeExample: `<Button type="primary">Click Me</Button>`,
    useCases: ["Enterprise apps", "Dashboards", "Data-heavy interfaces"],
    pros: ["Rich component set", "Internationalization support", "Consistent design language"],
    docsLink: "https://ant.design/",
    difficulty: "intermediate",
    popularity: 5,
    githubStars: "84K+",
    weeklyDownloads: "5M+",
    tags: ["ui", "components", "enterprise", "design"],
    lastUpdated: "2023-11-20",
    bundleSize: "120kB"
  },
  {
  id: 32,
  name: "Material-UI",
  category: "styling",
  icon: "üìê",
  description: "React components implementing Google‚Äôs Material Design for fast and consistent UI development.",
  problem: "Provides a comprehensive set of ready-to-use, accessible components to build modern interfaces quickly.",
  install: "npm install @mui/material @emotion/react @emotion/styled",
  codeExample: `import Button from '@mui/material/Button';

<Button variant="contained" color="primary">
  Click Me
</Button>`,
  useCases: ["Dashboards", "Admin panels", "Responsive web apps", "Prototyping"],
  pros: ["Rich component library", "Custom theming", "Accessibility ready", "Responsive by default"],
  docsLink: "https://mui.com/",
  difficulty: "beginner",
  popularity: 5,
  githubStars: "91K+",
  weeklyDownloads: "7M+",
  tags: ["ui", "components", "material-design", "responsive"],
  lastUpdated: "2025-08-01",
  bundleSize: "80kB"
}


];
